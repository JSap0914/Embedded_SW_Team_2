import os
import time
import json
import subprocess
import cv2
import requests
import RPi.GPIO as GPIO
from ultralytics import YOLO

# 센서 핀
PIR_PIN = 17

# 기본 경로
RECORD_DIR = "/home/pi/security_project/recordings"
os.makedirs(RECORD_DIR, exist_ok=True)

# YOLOv8 모델 불러오기 (라즈베리파이에서도 가능)
model = YOLO('/home/pi/security_project/yolov8n.pt')  # nano 모델

# Seafile 설정
SEAFILE_UPLOAD_URL = "https://your-seafile-server.com/upload-api-url"
SEAFILE_TOKEN = "your_token"

# GPIO 설정
GPIO.setmode(GPIO.BCM)
GPIO.setup(PIR_PIN, GPIO.IN)

# 조도 센서 함수 (ADC 사용하지 않는 예시)
def is_dark():
    return True  # 간단화: 실제로는 ADC 이용 필요

# 센서 트리거
def sensor_triggered():
    return GPIO.input(PIR_PIN) == GPIO.HIGH and is_dark()

# 녹화
def record_video(output_path, duration=10):
    command = [
        'ffmpeg',
        '-y',
        '-f', 'v4l2', '-framerate', '20', '-video_size', '640x480', '-i', '/dev/video0',
        '-f', 'alsa', '-i', 'plughw:1',
        '-c:v', 'libx264', '-preset', 'ultrafast',
        '-c:a', 'aac',
        '-t', str(duration),
        output_path
    ]
    subprocess.run(command, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

# YOLO 위험 분석
def detect_risk(video_path):
    cap = cv2.VideoCapture(video_path)
    risk_labels = ['knife', 'gun', 'fire']
    is_risk = False

    while True:
        ret, frame = cap.read()
        if not ret:
            break

        results = model(frame, verbose=False)
        names = results[0].names
        for r in results:
            for cls_id in r.boxes.cls:
                label = names[int(cls_id)]
                if label in risk_labels:
                    is_risk = True
                    print(f"위험 감지됨: {label}")
                    break
            if is_risk:
                break

        if is_risk:
            break
    cap.release()
    return is_risk

# Seafile 업로드
def upload_to_seafile(file_path):
    headers = {'Authorization': f'Token {SEAFILE_TOKEN}'}
    files = {'file': open(file_path, 'rb')}
    data = {'parent_dir': '/'}
    response = requests.post(SEAFILE_UPLOAD_URL, headers=headers, data=data, files=files)
    return response.status_code == 200

# 메인 루프
def main():
    print("✅ 시스템 시작: 센서 감지 대기 중")
    while True:
        if sensor_triggered():
            timestamp = time.strftime('%Y-%m-%d_%H-%M-%S')
            folder = os.path.join(RECORD_DIR, timestamp)
            os.makedirs(folder, exist_ok=True)

            video_path = os.path.join(folder, "video.mp4")
            flag_path = os.path.join(folder, "flag.json")

            print("🎬 녹화 시작")
            record_video(video_path)

            print("🔍 YOLOv8 분석 중")
            risk = detect_risk(video_path)

            if risk:
                with open(flag_path, 'w') as f:
                    json.dump({"risk": True, "time": timestamp}, f)
                print("⚠️ 위험 플래그 저장 완료")

            print("☁️ Seafile 업로드 중")
            upload_to_seafile(video_path)
            if risk:
                upload_to_seafile(flag_path)

            print("✅ 처리 완료. 센서 대기 중...\n")
            time.sleep(3)
        else:
            time.sleep(1)

# 프로그램 진입점
if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        GPIO.cleanup()
        print("\n🛑 프로그램 종료됨.")
